@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:Layout = "_LayoutEmpty";
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:<h1>添加</h1>
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
@:<h4>@Model.ViewDataTypeShortName</h4>
@:<hr />
@:<div class="row form-padding-top">
    @:<div class="col-md-12">
        @:<form asp-action="@Model.ViewName">
            @:<div asp-validation-summary="ModelOnly" class="text-danger"></div>
        foreach (var property in Model.ModelMetadata.Properties)
        {
            if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly)
            {
                if (property.IsForeignKey)
                {
            @:<div class="form-group">
                @:<div class="row">
                    @:<div class="@@LabelDivDefaultClass">
                        @:<label asp-for="@property.PropertyName" class="control-label"></label>
                    @:</div>
                    @:<div>
                        @:<select asp-for="@property.PropertyName" class="form-control" asp-items="ViewBag.@property.PropertyName"></select>
                    @:</div>
                @:</div>
            @:</div>
                    continue;
                }

                bool isCheckbox = property.TypeName.Equals("System.Boolean");
                if (isCheckbox)
                {
            @:<div class="form-group">
                @:<div class="row">
                    @:<div class="@@LabelDivDefaultClass">
                        @:<label asp-for="@property.PropertyName" class="control-label"></label>
                    @:</div>
                    @:<div class="form-check">
                        @:<label class="form-check-label">
                            @:<input class="form-check-input" asp-for="@property.PropertyName" /> @@Html.DisplayNameFor(model => model.@GetValueExpression(property))
                        @:</label>
                    @:</div>
                @:</div>
            @:</div>
                }
                else if (property.IsEnum && !property.IsEnumFlags)
                {
            @:<div class="form-group">
                @:<div class="row">
                    @:<div class="@@LabelDivDefaultClass">
                        @:<label asp-for="@property.PropertyName" class="control-label"></label>
                    @:</div>
                    @:<div>
                        @:<select asp-for="@property.PropertyName" asp-items="@@Html.GetEnumSelectList(typeof(@property.ShortTypeName))" class="form-control"></select>
                        @:<span asp-validation-for="@property.PropertyName" class="text-danger"></span>
                    @:</div>
                @:</div>
            @:</div>
                }
                else if (property.IsMultilineText)
                {
            @:<div class="form-group">
                @:<div class="row">
                    @:<div class="@@LabelDivDefaultClass">
                        @:<label asp-for="@property.PropertyName" class="control-label"></label>
                    @:</div>
                    @:<div>
                        @:<textarea asp-for="@property.PropertyName" class="form-control"></textarea>
                        @:<span asp-validation-for="@property.PropertyName" class="text-danger"></span>
                    @:</div>
                @:</div>
            @:</div>
                }
                else
                {
            @:<div class="form-group">
                @:<div class="row">
                    @:<div class="@@LabelDivDefaultClass">
                        @:<label asp-for="@property.PropertyName" class="control-label"></label>
                    @:</div>
                    @:<div >
                        @:<input asp-for="@property.PropertyName" class="form-control" />
                        @:<span asp-validation-for="@property.PropertyName" class="text-danger"></span>
                    @:</div>
                @:</div>
            @:</div>
                }
            }
        }
        }
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">返回</a>
</div>

@{
    if (Model.ReferenceScriptLibraries)
    {
@:@@section Scripts {
    @:@@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
@:}
    }
    // The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
@:</body>
@:</html>
    }
}
@functions
{
    // Do we need to use this in conjunction with the PrimaryKey check?
    bool IsPropertyGuid(IPropertyMetadata property)
    {
        return string.Equals("System.Guid", property.TypeName, StringComparison.OrdinalIgnoreCase);
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }
}
